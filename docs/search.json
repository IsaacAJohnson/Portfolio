[
  {
    "objectID": "posts/Covid Project/Covid.html",
    "href": "posts/Covid Project/Covid.html",
    "title": "Covid Project",
    "section": "",
    "text": "Eat your Veggies!\nPrep and load libraries\n\n\nShow the code\nsetwd(\"/Users/isaacjohnson/Documents/Scanner Output/School/Willamette/Data 502 Data Visualization/Covid Healthy Diet/From Jesse/112622/DeBolt_Johnson_DATA502-Final\")\n\nlibrary(tidyverse)\nlibrary(plotly)\nlibrary(gapminder)\nlibrary(ggrepel)\nlibrary(RColorBrewer)\n\n\nReading in original data\n\n\nShow the code\nFood_Supply_kcal <- read.csv(\"/Users/isaacjohnson/Documents/Scanner Output/School/Willamette/Data 502 Data Visualization/Covid Healthy Diet/From Jesse/112622/DeBolt_Johnson_DATA502-Final/Food_Supply_kcal_Data.csv\", header = TRUE)\n\nkcal_continents_trimmed <- read.csv(\"/Users/isaacjohnson/Documents/Scanner Output/School/Willamette/Data 502 Data Visualization/Covid Healthy Diet/From Jesse/112622/DeBolt_Johnson_DATA502-Final/kcal_continent_trimmed.csv\", header = TRUE)\n\n\nCreating outlier groups\n\n\nShow the code\nusa <- kcal_continents_trimmed %>% \n  filter(Country == 'United States')\nslovakia <- kcal_continents_trimmed %>% \n  filter(Country == 'Slovakia')\nnigeria <- kcal_continents_trimmed %>% \n  filter(Country == 'Nigeria')\n\n\nCreating country groups\n\n\nShow the code\nEurope <- kcal_continents_trimmed %>% \n  filter(Continent == 'Europe')\nNorthAmerica <- kcal_continents_trimmed %>% \n  filter(Continent == 'North America')\nSouthAmerica <- kcal_continents_trimmed %>% \n  filter(Continent == 'South America')\nAfrica <- kcal_continents_trimmed %>% \n  filter(Continent == 'Africa')\n\nAmericas <- kcal_continents_trimmed %>% \n  filter(Continent == 'North America' | Continent == 'South America')\n\n\nAll with no labels\n\n\nShow the code\nggplot(kcal_continents_trimmed, aes(x=Vegetal.Products, y=Animal.fats,\n        size=Deaths, color=Continent, text=paste(Country)))+\n  scale_color_brewer(palette=\"Dark2\")+\n  geom_point(alpha=0.35, aes(size=(Deaths*1000)))+\n    scale_size_continuous(name = \"Deaths per 1000\")+\n    scale_x_continuous(limits = c(27, 48.5))+\n     #Quadrant lines\n  geom_vline(xintercept = mean(kcal_continents_trimmed$Vegetal.Products),\n             linetype=\"dotted\", size=1, color = \"grey\")+\n    geom_text(aes(mean(Vegetal.Products), 8.1, label = \"veggie consumption\",\n                  hjust=0), size=2.8, vjust=1.40, angle=270,color = \"grey\")+\n    geom_text(aes(mean(Vegetal.Products), 8.1, label = \"average\", \n                  hjust=0), size=2.8, vjust=-0.85, angle=270, color = \"grey\")+\n    geom_hline(yintercept = mean(kcal_continents_trimmed$Animal.fats),\n               linetype=\"dotted\", size=1, color = \"grey\")+\n    geom_text(aes(27, mean(Animal.fats), label = \"meat consumption\",\n                  vjust=1.15), size=2.8, hjust=0, color =\"grey\")+\n    geom_text(aes(27, mean(Animal.fats), label = \"average\",\n                  vjust=-0.65), size=2.8, hjust=0, color = \"grey\")+\n      \n  theme_minimal()+\n  \n  #Titles\n  ggtitle(\"Eat your VEGGIES kids!\")+\n    theme(plot.title = element_text(size=18))+\n    theme(plot.title = element_text(face=\"italic\"))+\n  labs(y=\"Animal Fats\",\n       x=\"Vegetable Products\")+\n    theme(axis.title.x = element_text(margin = margin(t=6, b=5), size=13))+\n    theme(axis.title.y = element_text(margin = margin(r=5, l=5), size=13))+\n\n  #Quadrant labels\n  annotate(\"text\", x=43, y=-0.5, label = \"Veggie based diet\", size=4,\n           fontface = \"italic\", hjust=0)+\n  annotate(\"text\", x=27.5, y=7.4, label = \"Meat based diet\", size=4,\n           fontface = \"italic\", hjust=0)\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nâ„¹ Please use `linewidth` instead.\n\n\n\n\n\nEurope\n\n\nShow the code\nggplot(kcal_continents_trimmed, aes(x=Vegetal.Products, y=Animal.fats,\n        size=Deaths, text=paste(Country)))+\n  #scale_color_brewer(palette=\"Dark2\")+\n  geom_point(data = Europe, alpha=0.35, aes(size=(Deaths*1000)),\n             color = \"#7570B3\")+\n    scale_size_continuous(name = \"Deaths per 1000\")+\n    scale_x_continuous(limits = c(27, 48.5))+\n  \n  #Quadrant lines\n  geom_vline(xintercept = mean(kcal_continents_trimmed$Vegetal.Products),\n             linetype=\"dotted\", size=1, color = \"grey\")+\n    geom_text(aes(mean(Vegetal.Products), 8.1, label = \"veggie consumption\",\n                  hjust=0), size=2.8, vjust=1.40, angle=270,color = \"grey\")+\n    geom_text(aes(mean(Vegetal.Products), 8.1, label = \"average\", \n                  hjust=0), size=2.8, vjust=-0.85, angle=270, color = \"grey\")+\n    geom_hline(yintercept = mean(kcal_continents_trimmed$Animal.fats),\n               linetype=\"dotted\", size=1, color = \"grey\")+\n    geom_text(aes(27, mean(Animal.fats), label = \"meat consumption\",\n                  vjust=1.15), size=2.8, hjust=0, color =\"grey\")+\n    geom_text(aes(27, mean(Animal.fats), label = \"average\",\n                  vjust=-0.65), size=2.8, hjust=0, color = \"grey\")+\n  \n  theme_minimal()+\n  \n  #Titles\n  ggtitle(\"Eat your VEGGIES kids!\")+\n    theme(plot.title = element_text(size=18))+\n    theme(plot.title = element_text(face=\"italic\"))+\n  labs(y=\"Animal Fats\",\n       x=\"Vegetable Products\")+\n    theme(axis.title.x = element_text(margin = margin(t=6, b=5), size=13))+\n    theme(axis.title.y = element_text(margin = margin(r=5, l=5), size=13))+\n\n  #Quadrant labels\n  annotate(\"text\", x=43, y=-0.5, label = \"Veggie based diet\", size=4,\n           fontface = \"italic\", hjust=0)+\n  annotate(\"text\", x=27.5, y=7.4, label = \"Meat based diet\", size=4,\n           fontface = \"italic\", hjust=0)\n\n\n\n\n\nAmericas\n\n\nShow the code\nggplot(kcal_continents_trimmed, aes(x=Vegetal.Products, y=Animal.fats,\n        size=Deaths, text=paste(Country)))+\n  #scale_color_brewer(palette=\"Dark2\")+\n  geom_point(data = Americas, alpha=0.35, aes(size=(Deaths*1000)),\n             color = \"#E7298A\")+\n    scale_size_continuous(name = \"Deaths per 1000\")+\n    scale_x_continuous(limits = c(27, 48.5))+\n  \n  #Quadrant lines\n  geom_vline(xintercept = mean(kcal_continents_trimmed$Vegetal.Products),\n             linetype=\"dotted\", size=1, color = \"grey\")+\n    geom_text(aes(mean(Vegetal.Products), 8.1, label = \"veggie consumption\",\n                  hjust=0), size=2.8, vjust=1.40, angle=270,color = \"grey\")+\n    geom_text(aes(mean(Vegetal.Products), 8.1, label = \"average\", \n                  hjust=0), size=2.8, vjust=-0.85, angle=270, color = \"grey\")+\n    geom_hline(yintercept = mean(kcal_continents_trimmed$Animal.fats),\n               linetype=\"dotted\", size=1, color = \"grey\")+\n    geom_text(aes(27, mean(Animal.fats), label = \"meat consumption\",\n                  vjust=1.15), size=2.8, hjust=0, color =\"grey\")+\n    geom_text(aes(27, mean(Animal.fats), label = \"average\",\n                  vjust=-0.65), size=2.8, hjust=0, color = \"grey\")+\n  \n  theme_minimal()+\n  \n  #Titles\n  ggtitle(\"Eat your VEGGIES kids!\")+\n    theme(plot.title = element_text(size=18))+\n    theme(plot.title = element_text(face=\"italic\"))+\n  labs(y=\"Animal Fats\",\n       x=\"Vegetable Products\")+\n    theme(axis.title.x = element_text(margin = margin(t=6, b=5), size=13))+\n    theme(axis.title.y = element_text(margin = margin(r=5, l=5), size=13))+\n\n  #Quadrant labels\n  annotate(\"text\", x=43, y=-0.5, label = \"Veggie based diet\", size=4,\n           fontface = \"italic\", hjust=0)+\n  annotate(\"text\", x=27.5, y=7.4, label = \"Meat based diet\", size=4,\n           fontface = \"italic\", hjust=0)\n\n\n\n\n\nAfrica\n\n\nShow the code\nggplot(kcal_continents_trimmed, aes(x=Vegetal.Products, y=Animal.fats,\n        size=Deaths, text=paste(Country)))+\n  #scale_color_brewer(palette=\"Dark2\")+\n  geom_point(data = Africa, alpha=0.35, aes(size=(Deaths*1000)), \n             color = \"#1B9E77\")+\n    scale_size_continuous(name = \"Deaths per 1000\")+\n    scale_x_continuous(limits = c(27, 48.5))+\n  \n  #Quadrant lines\n  geom_vline(xintercept = mean(kcal_continents_trimmed$Vegetal.Products),\n             linetype=\"dotted\", size=1, color = \"grey\")+\n    geom_text(aes(mean(Vegetal.Products), 8.1, label = \"veggie consumption\",\n                  hjust=0), size=2.8, vjust=1.40, angle=270,color = \"grey\")+\n    geom_text(aes(mean(Vegetal.Products), 8.1, label = \"average\", \n                  hjust=0), size=2.8, vjust=-0.85, angle=270, color = \"grey\")+\n    geom_hline(yintercept = mean(kcal_continents_trimmed$Animal.fats),\n               linetype=\"dotted\", size=1, color = \"grey\")+\n    geom_text(aes(27, mean(Animal.fats), label = \"meat consumption\",\n                  vjust=1.15), size=2.8, hjust=0, color =\"grey\")+\n    geom_text(aes(27, mean(Animal.fats), label = \"average\",\n                  vjust=-0.65), size=2.8, hjust=0, color = \"grey\")+\n  \n  theme_minimal()+\n  \n  #Titles\n  ggtitle(\"Eat your VEGGIES kids!\")+\n    theme(plot.title = element_text(size=18))+\n    theme(plot.title = element_text(face=\"italic\"))+\n  labs(y=\"Animal Fats\",\n       x=\"Vegetable Products\")+\n    theme(axis.title.x = element_text(margin = margin(t=6, b=5), size=13))+\n    theme(axis.title.y = element_text(margin = margin(r=5, l=5), size=13))+\n\n  #Quadrant labels\n  annotate(\"text\", x=43, y=-0.5, label = \"Veggie based diet\", size=4,\n           fontface = \"italic\", hjust=0)+\n  annotate(\"text\", x=27.5, y=7.4, label = \"Meat based diet\", size=4,\n           fontface = \"italic\", hjust=0)\n\n\n\n\n\nAll with US highlighted\n\n\nShow the code\nggplot(kcal_continents_trimmed, aes(x=Vegetal.Products, y=Animal.fats,\n        size=Deaths, color=Continent, text=paste(Country)))+\n  scale_color_brewer(palette=\"Dark2\")+\n  geom_point(alpha=0.35, aes(size=(Deaths*1000)))+\n    scale_size_continuous(name = \"Deaths per 1000\")+\n    scale_x_continuous(limits = c(27, 48.5))+\n\n  #US and high/low outliers\n  geom_point(data = usa, aes(x=Vegetal.Products, y=Animal.fats),\n             color = \"#E7298A\", size=5)+\n    geom_label_repel(data = usa, aes(x=Vegetal.Products, y=Animal.fats,\n                    label = Country), fontface=\"bold\", size=4,\n                    nudge_x = -4.75, nudge_y = -1.0)+\n  # geom_point(data = slovakia, aes(x=Vegetal.Products, y=Animal.fats),\n  #            color = \"#7570B3\", size=4)+\n  #   geom_label_repel(data = slovakia, aes(x=Vegetal.Products, y=Animal.fats,\n  #                   label = Country), fontface=\"bold\", size=4,\n  #                   nudge_x = 2.75, nudge_y = -0.5)+\n  # geom_point(data = nigeria, aes(x=Vegetal.Products, y=Animal.fats),\n  #            color = \"#1B9E77\")+\n  #   geom_label_repel(data = nigeria, aes(x=Vegetal.Products, y=Animal.fats,\n  #                   label = Country), fontface=\"bold\", size=4, \n  #                   nudge_x = -1.5, nudge_y = 1.7)+\n  \n  #Quadrant lines\n  geom_vline(xintercept = mean(kcal_continents_trimmed$Vegetal.Products),\n             linetype=\"dotted\", size=1, color = \"grey\")+\n    geom_text(aes(mean(Vegetal.Products), 8.1, label = \"veggie consumption\",\n                  hjust=0), size=2.8, vjust=1.40, angle=270,color = \"grey\")+\n    geom_text(aes(mean(Vegetal.Products), 8.1, label = \"average\", \n                  hjust=0), size=2.8, vjust=-0.85, angle=270, color = \"grey\")+\n    geom_hline(yintercept = mean(kcal_continents_trimmed$Animal.fats),\n               linetype=\"dotted\", size=1, color = \"grey\")+\n    geom_text(aes(27, mean(Animal.fats), label = \"meat consumption\",\n                  vjust=1.15), size=2.8, hjust=0, color =\"grey\")+\n    geom_text(aes(27, mean(Animal.fats), label = \"average\",\n                  vjust=-0.65), size=2.8, hjust=0, color = \"grey\")+\n  \n  theme_minimal()+\n  \n  #Titles\n  ggtitle(\"Eat your VEGGIES kids!\")+\n    theme(plot.title = element_text(size=18))+\n    theme(plot.title = element_text(face=\"italic\"))+\n  labs(y=\"Animal Fats\",\n       x=\"Vegetable Products\")+\n    theme(axis.title.x = element_text(margin = margin(t=6, b=5), size=13))+\n    theme(axis.title.y = element_text(margin = margin(r=5, l=5), size=13))+\n\n  #Quadrant labels\n  annotate(\"text\", x=43, y=-0.5, label = \"Veggie based diet\", size=4,\n           fontface = \"italic\", hjust=0)+\n  annotate(\"text\", x=27.5, y=7.4, label = \"Meat based diet\", size=4,\n           fontface = \"italic\", hjust=0)\n\n\n\n\n\nAll with US and Slovakia highlighted\n\n\nShow the code\nggplot(kcal_continents_trimmed, aes(x=Vegetal.Products, y=Animal.fats,\n        size=Deaths, color=Continent, text=paste(Country)))+\n  scale_color_brewer(palette=\"Dark2\")+\n  geom_point(alpha=0.35, aes(size=(Deaths*1000)))+\n    scale_size_continuous(name = \"Deaths per 1000\")+\n    scale_x_continuous(limits = c(27, 48.5))+\n\n  #US and high/low outliers\n  geom_point(data = usa, aes(x=Vegetal.Products, y=Animal.fats),\n             color = \"#E7298A\", size=5)+\n    geom_label_repel(data = usa, aes(x=Vegetal.Products, y=Animal.fats,\n                    label = Country), fontface=\"bold\", size=4,\n                    nudge_x = -4.75, nudge_y = -1.0)+\n  geom_point(data = slovakia, aes(x=Vegetal.Products, y=Animal.fats),\n             color = \"#7570B3\", size=4)+\n    geom_label_repel(data = slovakia, aes(x=Vegetal.Products, y=Animal.fats,\n                    label = Country), fontface=\"bold\", size=4,\n                    nudge_x = 2.75, nudge_y = -0.5)+\n    \n  #Quadrant lines\n  geom_vline(xintercept = mean(kcal_continents_trimmed$Vegetal.Products),\n             linetype=\"dotted\", size=1, color = \"grey\")+\n    geom_text(aes(mean(Vegetal.Products), 8.1, label = \"veggie consumption\",\n                  hjust=0), size=2.8, vjust=1.40, angle=270,color = \"grey\")+\n    geom_text(aes(mean(Vegetal.Products), 8.1, label = \"average\", \n                  hjust=0), size=2.8, vjust=-0.85, angle=270, color = \"grey\")+\n    geom_hline(yintercept = mean(kcal_continents_trimmed$Animal.fats),\n               linetype=\"dotted\", size=1, color = \"grey\")+\n    geom_text(aes(27, mean(Animal.fats), label = \"meat consumption\",\n                  vjust=1.15), size=2.8, hjust=0, color =\"grey\")+\n    geom_text(aes(27, mean(Animal.fats), label = \"average\",\n                  vjust=-0.65), size=2.8, hjust=0, color = \"grey\")+\n  \n  theme_minimal()+\n  \n  #Titles\n  ggtitle(\"Eat your VEGGIES kids!\")+\n    theme(plot.title = element_text(size=18))+\n    theme(plot.title = element_text(face=\"italic\"))+\n  labs(y=\"Animal Fats\",\n       x=\"Vegetable Products\")+\n    theme(axis.title.x = element_text(margin = margin(t=6, b=5), size=13))+\n    theme(axis.title.y = element_text(margin = margin(r=5, l=5), size=13))+\n\n  #Quadrant labels\n  annotate(\"text\", x=43, y=-0.5, label = \"Veggie based diet\", size=4,\n           fontface = \"italic\", hjust=0)+\n  annotate(\"text\", x=27.5, y=7.4, label = \"Meat based diet\", size=4,\n           fontface = \"italic\", hjust=0)\n\n\n\n\n\nAll with US, Slovakia, and Nigeria highlighted\n\n\nShow the code\nggplot(kcal_continents_trimmed, aes(x=Vegetal.Products, y=Animal.fats,\n        size=Deaths, color=Continent, text=paste(Country)))+\n  scale_color_brewer(palette=\"Dark2\")+\n  geom_point(alpha=0.35, aes(size=(Deaths*1000)))+\n    scale_size_continuous(name = \"Deaths per 1000\")+\n    scale_x_continuous(limits = c(27, 48.5))+\n\n  #US and high/low outliers\n  geom_point(data = usa, aes(x=Vegetal.Products, y=Animal.fats),\n             color = \"#E7298A\", size=5)+\n    geom_label_repel(data = usa, aes(x=Vegetal.Products, y=Animal.fats,\n                    label = Country), fontface=\"bold\", size=4,\n                    nudge_x = -4.75, nudge_y = -1.0)+\n  geom_point(data = slovakia, aes(x=Vegetal.Products, y=Animal.fats),\n             color = \"#7570B3\", size=4)+\n    geom_label_repel(data = slovakia, aes(x=Vegetal.Products, y=Animal.fats,\n                    label = Country), fontface=\"bold\", size=4,\n                    nudge_x = 2.75, nudge_y = -0.5)+\n  geom_point(data = nigeria, aes(x=Vegetal.Products, y=Animal.fats),\n             color = \"#1B9E77\")+\n    geom_label_repel(data = nigeria, aes(x=Vegetal.Products, y=Animal.fats,\n                    label = Country), fontface=\"bold\", size=4,\n                    nudge_x = -1.5, nudge_y = 1.7)+\n  \n  #Quadrant lines\n  geom_vline(xintercept = mean(kcal_continents_trimmed$Vegetal.Products),\n             linetype=\"dotted\", size=1, color = \"grey\")+\n    geom_text(aes(mean(Vegetal.Products), 8.1, label = \"veggie consumption\",\n                  hjust=0), size=2.8, vjust=1.40, angle=270,color = \"grey\")+\n    geom_text(aes(mean(Vegetal.Products), 8.1, label = \"average\", \n                  hjust=0), size=2.8, vjust=-0.85, angle=270, color = \"grey\")+\n    geom_hline(yintercept = mean(kcal_continents_trimmed$Animal.fats),\n               linetype=\"dotted\", size=1, color = \"grey\")+\n    geom_text(aes(27, mean(Animal.fats), label = \"meat consumption\",\n                  vjust=1.15), size=2.8, hjust=0, color =\"grey\")+\n    geom_text(aes(27, mean(Animal.fats), label = \"average\",\n                  vjust=-0.65), size=2.8, hjust=0, color = \"grey\")+\n  \n  theme_minimal()+\n  \n  #Titles\n  ggtitle(\"Eat your VEGGIES kids!\")+\n    theme(plot.title = element_text(size=18))+\n    theme(plot.title = element_text(face=\"italic\"))+\n  labs(y=\"Animal Fats\",\n       x=\"Vegetable Products\")+\n    theme(axis.title.x = element_text(margin = margin(t=6, b=5), size=13))+\n    theme(axis.title.y = element_text(margin = margin(r=5, l=5), size=13))+\n\n  #Quadrant labels\n  annotate(\"text\", x=43, y=-0.5, label = \"Veggie based diet\", size=4,\n           fontface = \"italic\", hjust=0)+\n  annotate(\"text\", x=27.5, y=7.4, label = \"Meat based diet\", size=4,\n           fontface = \"italic\", hjust=0)\n\n\n\n\n\nEverything\n\n\nShow the code\nggplot(kcal_continents_trimmed, aes(x=Vegetal.Products, y=Animal.fats,\n        size=Deaths, color=Continent, text=paste(Country)))+\n  scale_color_brewer(palette=\"Dark2\")+\n  geom_point(alpha=0.35, aes(size=(Deaths*1000)))+\n    scale_size_continuous(name = \"Deaths per 1000\")+\n    scale_x_continuous(limits = c(27, 48.5))+\n  \n  #US and high/low outliers\n  geom_point(data = usa, aes(x=Vegetal.Products, y=Animal.fats),\n             color = \"#E7298A\", size=5)+\n    geom_label_repel(data = usa, aes(x=Vegetal.Products, y=Animal.fats,\n                    label = Country), fontface=\"bold\", size=4,\n                    nudge_x = -4.75, nudge_y = -1.0)+\n  geom_point(data = slovakia, aes(x=Vegetal.Products, y=Animal.fats),\n             color = \"#7570B3\", size=4)+\n    geom_label_repel(data = slovakia, aes(x=Vegetal.Products, y=Animal.fats,\n                    label = Country), fontface=\"bold\", size=4,\n                    nudge_x = 2.75, nudge_y = -0.5)+\n  geom_point(data = nigeria, aes(x=Vegetal.Products, y=Animal.fats),\n             color = \"#1B9E77\")+\n    geom_label_repel(data = nigeria, aes(x=Vegetal.Products, y=Animal.fats,\n                    label = Country), fontface=\"bold\", size=4,\n                    nudge_x = -1.5, nudge_y = 1.7)+\n  \n  #Quadrant lines\n  geom_vline(xintercept = mean(kcal_continents_trimmed$Vegetal.Products),\n             linetype=\"dotted\", size=1, color = \"grey\")+\n    geom_text(aes(mean(Vegetal.Products), 8.1, label = \"veggie consumption\",\n                  hjust=0), size=2.8, vjust=1.40, angle=270,color = \"grey\")+\n    geom_text(aes(mean(Vegetal.Products), 8.1, label = \"average\", \n                  hjust=0), size=2.8, vjust=-0.85, angle=270, color = \"grey\")+\n    geom_hline(yintercept = mean(kcal_continents_trimmed$Animal.fats),\n               linetype=\"dotted\", size=1, color = \"grey\")+\n    geom_text(aes(27, mean(Animal.fats), label = \"meat consumption\",\n                  vjust=1.15), size=2.8, hjust=0, color =\"grey\")+\n    geom_text(aes(27, mean(Animal.fats), label = \"average\",\n                  vjust=-0.65), size=2.8, hjust=0, color = \"grey\")+\n  \n  theme_minimal()+\n  \n  #Titles\n  ggtitle(\"Eat your VEGGIES kids!\")+\n    theme(plot.title = element_text(size=18))+\n    theme(plot.title = element_text(face=\"italic\"))+\n  labs(y=\"Animal Fats\",\n       x=\"Vegetable Products\")+\n    theme(axis.title.x = element_text(margin = margin(t=6, b=5), size=13))+\n    theme(axis.title.y = element_text(margin = margin(r=5, l=5), size=13))+\n\n  #Quadrant labels\n  annotate(\"text\", x=43, y=-0.5, label = \"Veggie based diet\", size=4,\n           fontface = \"italic\", hjust=0)+\n  annotate(\"text\", x=27.5, y=7.4, label = \"Meat based diet\", size=4,\n           fontface = \"italic\", hjust=0)\n\n\n\n\n\nPlotly finale\n\n\nShow the code\nveggie_plotly <- ggplot(kcal_continents_trimmed, aes(x=Vegetal.Products, y=Animal.fats,\n        size=Deaths, color=Continent, text=paste(Country)))+\n  scale_color_brewer(palette=\"Dark2\")+\n  geom_point(alpha=0.35, aes(size=(Deaths*1000)))+\n    scale_size_continuous(name = \"Deaths per 1000\")+\n    scale_x_continuous(limits = c(27, 48.5))+\n  \n  #US and high/low outliers\n  geom_point(data = usa, aes(x=Vegetal.Products, y=Animal.fats),\n             color = \"#E7298A\", size=5)+\n    geom_label_repel(data = usa, aes(x=Vegetal.Products, y=Animal.fats,\n                    label = Country), fontface=\"bold\", size=4,\n                    nudge_x = -4.75, nudge_y = -1.0)+\n  geom_point(data = slovakia, aes(x=Vegetal.Products, y=Animal.fats),\n             color = \"#7570B3\", size=4)+\n    geom_label_repel(data = slovakia, aes(x=Vegetal.Products, y=Animal.fats,\n                    label = Country), fontface=\"bold\", size=4,\n                    nudge_x = 2.75, nudge_y = -0.5)+\n  geom_point(data = nigeria, aes(x=Vegetal.Products, y=Animal.fats),\n             color = \"#1B9E77\")+\n    geom_label_repel(data = nigeria, aes(x=Vegetal.Products, y=Animal.fats,\n                    label = Country), fontface=\"bold\", size=4,\n                    nudge_x = -1.5, nudge_y = 1.7)+\n  \n  #Quadrant lines\n  geom_vline(xintercept = mean(kcal_continents_trimmed$Vegetal.Products),\n             linetype=\"dotted\", size=1, color = \"grey\")+\n    geom_hline(yintercept = mean(kcal_continents_trimmed$Animal.fats),\n               linetype=\"dotted\", size=1, color = \"grey\")+\n  \n  theme_minimal()+\n  \n  #Titles\n  ggtitle(\"Eat your VEGGIES kids!\")+\n    theme(plot.title = element_text(size=18))+\n    theme(plot.title = element_text(face=\"italic\"))+\n  labs(y=\"Animal Fats\",\n       x=\"Vegetable Products\")+\n    theme(axis.title.x = element_text(margin = margin(t=6, b=5), size=13))+\n    theme(axis.title.y = element_text(margin = margin(r=5, l=5), size=13))\n\nggplotly(veggie_plotly, tooltip = \"text\")\n\n\nWarning in geom2trace.default(dots[[1L]][[1L]], dots[[2L]][[1L]], dots[[3L]][[1L]]): geom_GeomLabelRepel() has yet to be implemented in plotly.\n  If you'd like to see this geom implemented,\n  Please open an issue with your example code at\n  https://github.com/ropensci/plotly/issues\n\nWarning in geom2trace.default(dots[[1L]][[1L]], dots[[2L]][[1L]], dots[[3L]][[1L]]): geom_GeomLabelRepel() has yet to be implemented in plotly.\n  If you'd like to see this geom implemented,\n  Please open an issue with your example code at\n  https://github.com/ropensci/plotly/issues\n\nWarning in geom2trace.default(dots[[1L]][[1L]], dots[[2L]][[1L]], dots[[3L]][[1L]]): geom_GeomLabelRepel() has yet to be implemented in plotly.\n  If you'd like to see this geom implemented,\n  Please open an issue with your example code at\n  https://github.com/ropensci/plotly/issues\n\n\n\n\n\n\n\nSave plot\n\n\nShow the code\nggsave(\"covid.png\", width = 9, height = 7, units = \"in\")"
  },
  {
    "objectID": "posts/ducks_tidy_tuesday/index.html",
    "href": "posts/ducks_tidy_tuesday/index.html",
    "title": "#TidyTuesday inspired by @osteobjorn | #TidyTuesday 06-10-2020",
    "section": "",
    "text": "Show the code\n#| echo: true\n\nlibrary(ggplot2)\nlibrary(tidytuesdayR)\nlibrary(tidyverse)\nlibrary(cowplot)\nlibrary(magick)\n\n\ndata <- tt_load('2020-10-06')\n\n\n\n    Downloading file 1 of 1: `tournament.csv`\n\n\nShow the code\ntournament <- data$tournament \n\noregon <- tournament %>%\n  filter(school == \"Oregon\") %>%\n  select(school, year, full_percent, tourney_finish)\n\n#save locally\nwrite.csv(tournament, \"/Users/isaacjohnson/Documents/Scanner Output/School/Willamette/Communicating with Data 020123/tournament.csv\", row.names=FALSE)"
  },
  {
    "objectID": "posts/ducks_tidy_tuesday/index.html#plot-the-data",
    "href": "posts/ducks_tidy_tuesday/index.html#plot-the-data",
    "title": "#TidyTuesday inspired by @osteobjorn | #TidyTuesday 06-10-2020",
    "section": "Plot the data",
    "text": "Plot the data\n\n\nShow the code\nggplot(oregon, aes(x = year, y = full_percent)) +\n    geom_path() +\n    geom_point() +\n    geom_text(aes(label = paste0(tourney_finish)))"
  },
  {
    "objectID": "posts/ducks_tidy_tuesday/index.html#clean-up-the-chart",
    "href": "posts/ducks_tidy_tuesday/index.html#clean-up-the-chart",
    "title": "#TidyTuesday inspired by @osteobjorn | #TidyTuesday 06-10-2020",
    "section": "Clean up the chart",
    "text": "Clean up the chart\n\n\nShow the code\nggplot(oregon, aes(x = year, y = full_percent)) + \n  geom_path() + \n  geom_point() + \n  geom_text(aes(label = paste0(tourney_finish)), \n            nudge_y = c(2, 2, -2, 2, -1, -2, 2, -2, 2, 0, -2, 1.5, -2, .5),\n            nudge_x = c(0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 0.5, 0, -1))"
  },
  {
    "objectID": "posts/ducks_tidy_tuesday/index.html#more-editing-the-plot",
    "href": "posts/ducks_tidy_tuesday/index.html#more-editing-the-plot",
    "title": "#TidyTuesday inspired by @osteobjorn | #TidyTuesday 06-10-2020",
    "section": "More editing the plot",
    "text": "More editing the plot\n\n\nShow the code\nggplot(oregon, aes(x = year, y = full_percent)) + \n  geom_path() + \n  geom_point() + \n  geom_text(aes(label = paste0(tourney_finish)), \n            nudge_y = c(2, 2, -2, 2, -1, -2, 2, -2, 2, 0, -2, 1.5, -2, .5),\n            nudge_x = c(0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 0.5, 0, -1)) + \n  labs(title = \"Oregon NCAA Tournament History\",\n       subtitle = \"Total win/loss percentage and end result by year\",\n      x = \"Year\", y = \"Total win/loss percentage\", \n      caption = \"inspired by @osteobjorn | #TidyTuesday 06-10-2020 | source: FiveThirtyEight\")"
  },
  {
    "objectID": "posts/ducks_tidy_tuesday/index.html#add-color",
    "href": "posts/ducks_tidy_tuesday/index.html#add-color",
    "title": "#TidyTuesday inspired by @osteobjorn | #TidyTuesday 06-10-2020",
    "section": "Add color",
    "text": "Add color\n\n\nShow the code\nggplot(oregon, aes(x = year, y = full_percent)) + \n  geom_path(col = \"#FEE123\") + \n  geom_point(col = \"#FEE123\") + \n  geom_text(aes(label = paste0(tourney_finish)), \n            col = \"white\",\n            nudge_y = c(2, 2, -2, 2, -1, -2, 2, -2, 2, 0, -2, 1.5, -2, .5),\n            nudge_x = c(0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 0.5, 0, -1)) + \n  labs(title = \"Oregon NCAA Tournament History\",\n       subtitle = \"Total win/loss percentage and end result by year\",\n      x = \"Year\", y = \"Total win/loss percentage\", \n      caption = \"inspired by @osteobjorn | #TidyTuesday 06-10-2020 | source: FiveThirtyEight\")+\n    theme(plot.background = element_rect(fill = \"#154733\"), # background colour\n        plot.title = element_text(colour = \"#FEE123\", # text colour\n                                  size = 20, # font size\n                                  face = \"bold\"), # bold text\n        plot.subtitle = element_text(colour = \"#FEE123\",\n                                     size = 14),\n        plot.caption = element_text(colour = \"#FEE123\"),\n        axis.text = element_text(colour = \"#FEE123\"),\n        axis.title.x = element_blank(), \n        axis.title.y = element_blank(), \n        axis.text.y = element_blank(),\n        plot.margin = unit(c(1,1,1,1), \"cm\"), \n        panel.background = element_rect(fill = \"#154733\"), \n        panel.grid = element_blank())"
  },
  {
    "objectID": "posts/ducks_tidy_tuesday/index.html#added-logo",
    "href": "posts/ducks_tidy_tuesday/index.html#added-logo",
    "title": "#TidyTuesday inspired by @osteobjorn | #TidyTuesday 06-10-2020",
    "section": "Added logo",
    "text": "Added logo\n\n\nShow the code\nimg <- image_read(path = \"https://goducks.com/images/uoregon_logo.png\")\n\np <- ggplot(oregon, aes(x = year, y = full_percent)) + \n  geom_path(col = \"#FEE123\") + \n  geom_point(col = \"#FEE123\") + \n  geom_text(aes(label = paste0(tourney_finish)), \n            col = \"white\",\n            nudge_y = c(2, 2, -2, 2, -1, -2, 2, -2, 2, 0, -2, 1.5, -2, .5),\n            nudge_x = c(0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 0.5, 0, -1)) + \n  labs(title = \"Oregon NCAA Tournament History\",\n       subtitle = \"Total win/loss percentage and end result by year\",\n      x = \"Year\", y = \"Total win/loss percentage\", \n      caption = \"inspired by @osteobjorn | #TidyTuesday 06-10-2020 | source: FiveThirtyEight\")+\n    theme(plot.background = element_rect(fill = \"#154733\"), # background colour\n        plot.title = element_text(colour = \"#FEE123\", # text colour\n                                  size = 20, # font size\n                                  face = \"bold\"), # bold text\n        plot.subtitle = element_text(colour = \"#FEE123\",\n                                     size = 14),\n        plot.caption = element_text(colour = \"#FEE123\"),\n        axis.text = element_text(colour = \"#FEE123\"),\n        axis.title.x = element_blank(), \n        axis.title.y = element_blank(), \n        axis.text.y = element_blank(),\n        plot.margin = unit(c(1,1,1,1), \"cm\"), \n        panel.background = element_rect(fill = \"#154733\"), \n        panel.grid = element_blank()) \n\n\nggdraw() +\n  draw_plot(p) + \n  draw_image(img, scale = 0.2, hjust = 0.4, vjust = 0.2)\n\n\n\n\n\n\n\nShow the code\nggsave(\"oregon.png\", width = 9, height = 7, units = \"in\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Isaac Johnsonâ€™s Portfolio",
    "section": "",
    "text": "I am excited to share with you some of my progress so far. I am currently enrolled in a Masters of Data Science program at Willamette University, and looking forward to graduation this August â€™23! Please take a look around and would love to hear from you."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "I making a career pivot, and working on something I have wanted to do for a long time. Currently enrolled at Willamette Univeristy in their Masterâ€™s of Data Science program, and am expecting to graduate this August â€™23. Previously I worked in healthcare as a medical and pharmaceutical sales representative. Through that I got to learn many aspects of working in healthcare very thoroughly, including health insurance, formularies, prior authorizations, managed care plans, communicating with doctors, staff, and many other stakeholders.\nmore to comeâ€¦.."
  },
  {
    "objectID": "posts/Murder Rates/Murder Rates.html",
    "href": "posts/Murder Rates/Murder Rates.html",
    "title": "Murder Rates",
    "section": "",
    "text": "#Load Library and prep data\n\n\nShow the code\nlibrary(maps)\nlibrary(viridis)\nlibrary(tidyverse)\nlibrary(leaflet)\nlibrary(sf)\nlibrary(tigris)\n\n# Load the USArrests dataset\ndata(USArrests)\n\n# Prepare the data for leaflet\narrests_data <- USArrests %>%\n  rownames_to_column(var = \"state\") %>%\n  mutate(state = tolower(state))\n\n# Load the US states map data\nus_states_map <- map_data(\"state\")\n\n# Define color palette\ncolor_pal <- colorBin(viridis_pal()(5), domain = arrests_data$Murder, bins = 5)\n\n# Join the US states map data with the arrests data\nus_states_map_data <- us_states_map %>%\n  left_join(arrests_data, by = c(\"region\" = \"state\"))\n\n# Load the US states shapefile data\nus_states_shapefile <- states(class = \"sf\", resolution = \"20m\") %>%\n  st_transform(4326) %>%\n  mutate(state = tolower(NAME))\n\n\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |                                                                      |   1%\n  |                                                                            \n  |=                                                                     |   1%\n  |                                                                            \n  |=                                                                     |   2%\n  |                                                                            \n  |==                                                                    |   2%\n  |                                                                            \n  |==                                                                    |   3%\n  |                                                                            \n  |==                                                                    |   4%\n  |                                                                            \n  |===                                                                   |   4%\n  |                                                                            \n  |===                                                                   |   5%\n  |                                                                            \n  |====                                                                  |   5%\n  |                                                                            \n  |====                                                                  |   6%\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |========                                                              |  11%\n  |                                                                            \n  |=========                                                             |  12%\n  |                                                                            \n  |=========                                                             |  13%\n  |                                                                            \n  |===========                                                           |  16%\n  |                                                                            \n  |============                                                          |  17%\n  |                                                                            \n  |=============                                                         |  18%\n  |                                                                            \n  |==============                                                        |  20%\n  |                                                                            \n  |===============                                                       |  21%\n  |                                                                            \n  |===============                                                       |  22%\n  |                                                                            \n  |================                                                      |  23%\n  |                                                                            \n  |===================                                                   |  27%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |=======================                                               |  33%\n  |                                                                            \n  |========================                                              |  34%\n  |                                                                            \n  |========================                                              |  35%\n  |                                                                            \n  |=========================                                             |  35%\n  |                                                                            \n  |==========================                                            |  38%\n  |                                                                            \n  |============================                                          |  40%\n  |                                                                            \n  |=============================                                         |  42%\n  |                                                                            \n  |==============================                                        |  43%\n  |                                                                            \n  |===============================                                       |  44%\n  |                                                                            \n  |================================                                      |  46%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |====================================                                  |  52%\n  |                                                                            \n  |=======================================                               |  55%\n  |                                                                            \n  |========================================                              |  57%\n  |                                                                            \n  |========================================                              |  58%\n  |                                                                            \n  |==========================================                            |  60%\n  |                                                                            \n  |===========================================                           |  61%\n  |                                                                            \n  |============================================                          |  63%\n  |                                                                            \n  |=============================================                         |  64%\n  |                                                                            \n  |=============================================                         |  65%\n  |                                                                            \n  |==============================================                        |  66%\n  |                                                                            \n  |===============================================                       |  67%\n  |                                                                            \n  |================================================                      |  68%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |==================================================                    |  71%\n  |                                                                            \n  |==================================================                    |  72%\n  |                                                                            \n  |===================================================                   |  73%\n  |                                                                            \n  |======================================================                |  77%\n  |                                                                            \n  |=======================================================               |  79%\n  |                                                                            \n  |========================================================              |  79%\n  |                                                                            \n  |========================================================              |  81%\n  |                                                                            \n  |=========================================================             |  82%\n  |                                                                            \n  |==========================================================            |  83%\n  |                                                                            \n  |===========================================================           |  84%\n  |                                                                            \n  |============================================================          |  85%\n  |                                                                            \n  |=============================================================         |  87%\n  |                                                                            \n  |==============================================================        |  88%\n  |                                                                            \n  |===============================================================       |  90%\n  |                                                                            \n  |================================================================      |  92%\n  |                                                                            \n  |=================================================================     |  92%\n  |                                                                            \n  |=================================================================     |  93%\n  |                                                                            \n  |==================================================================    |  94%\n  |                                                                            \n  |==================================================================    |  95%\n  |                                                                            \n  |===================================================================   |  95%\n  |                                                                            \n  |===================================================================   |  96%\n  |                                                                            \n  |====================================================================  |  97%\n  |                                                                            \n  |======================================================================| 100%\n\n\nShow the code\n# Join the US states shapefile data with the arrests data\nus_states_map_data <- us_states_shapefile %>%\n  left_join(arrests_data, by = c(\"state\" = \"state\"))\n\n\n#Create Leaflet Map\n\n\nShow the code\n# Create the leaflet map\nleaflet_map <- leaflet() %>%\n  addProviderTiles(\"CartoDB.Positron\") %>%\n  addPolygons(\n    data = us_states_map_data,\n    group = \"states\",\n    fillColor = ~color_pal(Murder),\n    color = \"#BDBDC3\",\n    fillOpacity = 0.7,\n    weight = 1,\n    label = ~paste0(NAME, \": \", Murder, \" murders per 100,000\"),\n    labelOptions = labelOptions(direction = \"auto\")\n  ) %>%\n  addLegend(\n    pal = color_pal,\n    values = arrests_data$Murder,\n    title = \"Murders per 100,000\",\n    position = \"bottomright\",\n    opacity = 0.7,\n    labFormat = labelFormat(prefix = \"\"),\n    labels = c(\"Low\", \"Medium-Low\", \"Medium\", \"Medium-High\", \"High\")\n  )\n\n# Display the leaflet map\nleaflet_map"
  },
  {
    "objectID": "posts/Tables/Untitled.html",
    "href": "posts/Tables/Untitled.html",
    "title": "Tables NHANES",
    "section": "",
    "text": "Load libraries and data\n\n\nShow the code\nlibrary(gt)\nlibrary(flextable)\nlibrary(DT)\nlibrary(tidyverse)\nlibrary(NHANES)\n\ndata(NHANES)\n\n\nCreate a summary of BMI by age group\n\n\nShow the code\nbmi_data_by_age <- NHANES %>%\n  mutate(AgeGroup = case_when(\n    Age < 18 ~ \"Under 18\",\n    Age >= 18 & Age < 35 ~ \"18-34\",\n    Age >= 35 & Age < 50 ~ \"35-49\",\n    Age >= 50 ~ \"50+\"\n  )) %>%\n  group_by(AgeGroup) %>%\n  summarize(mean_bmi = mean(BMI, na.rm = TRUE))\n\n\nGT table\n\n\nShow the code\ngt_table <- bmi_data_by_age %>%\n  gt() %>%\n  tab_header(title = \"Average BMI by Age Group\") %>%\n  cols_label(\n    AgeGroup = \"Age Group\",\n    mean_bmi = \"Mean BMI\"\n  )\n\ngt::gt_preview(gt_table)\n\n\n\n\n\n\n  \n  \n    \n      \n      AgeGroup\n      mean_bmi\n    \n  \n  \n    1\n18-34\n27.78920\n    2\n35-49\n29.02937\n    3\n50+\n29.07508\n    4\nUnder 18\n19.93960\n  \n  \n  \n\n\n\n\nFlextable\n\n\nShow the code\nflextable_table <- bmi_data_by_age %>%\n  flextable() %>%\n  set_caption(\"Average BMI by Age Group\") %>%\n  colformat_num(\n    j = \"mean_bmi\",\n    digits = 2,\n    big.mark = \",\"\n  )\n\nprint(flextable_table)\n\n\na flextable object.\ncol_keys: `AgeGroup`, `mean_bmi` \nheader has 1 row(s) \nbody has 4 row(s) \noriginal dataset sample: \n  AgeGroup mean_bmi\n1    18-34 27.78920\n2    35-49 29.02937\n3      50+ 29.07508\n4 Under 18 19.93960\n\n\nDT data table\n\n\nShow the code\ndatatable_table <- datatable(bmi_data_by_age,\n                             caption = \"Average BMI by Age Group\",\n                             rownames = FALSE,\n                             options = list(pageLength = 10))\n\nprint(datatable_table)\n\n\nAdd more variables\n\n\nShow the code\ncomplex_data_by_age <- NHANES %>%\n  mutate(AgeGroup = factor(case_when(\n    Age < 18 ~ \"Under 18\",\n    Age >= 18 & Age < 35 ~ \"18-34\",\n    Age >= 35 & Age < 50 ~ \"35-49\",\n    Age >= 50 ~ \"50+\"\n  ), levels = c(\"Under 18\", \"18-34\", \"35-49\", \"50+\"))) %>%\n  group_by(AgeGroup) %>%\n  summarize(\n    mean_bmi = mean(BMI, na.rm = TRUE),\n    mean_systolic_BP = mean(BPSysAve, na.rm = TRUE),\n    mean_diastolic_BP = mean(BPDiaAve, na.rm = TRUE),\n    diabetes_prevalence = mean(Diabetes == \"Yes\", na.rm = TRUE) * 100\n  )\n\n\nUpdated GT table\n\n\nShow the code\ngt_table_complex <- complex_data_by_age %>%\n  gt() %>%\n  tab_header(title = \"Health Metrics by Age Group\") %>%\n  cols_label(\n    AgeGroup = \"Age Group\",\n    mean_bmi = \"Mean BMI\",\n    mean_systolic_BP = \"Mean Systolic BP\",\n    mean_diastolic_BP = \"Mean Diastolic BP\",\n    diabetes_prevalence = \"Diabetes Prevalence (%)\"\n  )\n\ngt::gt_preview(gt_table_complex)\n\n\n\n\n\n\n  \n  \n    \n      \n      AgeGroup\n      mean_bmi\n      mean_systolic_BP\n      mean_diastolic_BP\n      diabetes_prevalence\n    \n  \n  \n    1\nUnder 18\n19.93960\n104.3848\n54.60773\n0.714586\n    2\n18-34\n27.78920\n113.2374\n67.26446\n1.279788\n    3\n35-49\n29.02937\n117.8523\n73.25816\n5.888031\n    4\n50+\n29.07508\n127.9862\n69.55237\n18.847501\n  \n  \n  \n\n\n\n\nUpdated Flextable\n\n\nShow the code\nflextable_table_complex <- complex_data_by_age %>%\n  flextable() %>%\n  set_caption(\"Health Metrics by Age Group\") %>%\n  colformat_num(\n    j = c(\"mean_bmi\", \"mean_systolic_BP\", \"mean_diastolic_BP\", \"diabetes_prevalence\"),\n    digits = 2,\n    big.mark = \",\"\n  )\n\nprint(flextable_table_complex)\n\n\na flextable object.\ncol_keys: `AgeGroup`, `mean_bmi`, `mean_systolic_BP`, `mean_diastolic_BP`, `diabetes_prevalence` \nheader has 1 row(s) \nbody has 4 row(s) \noriginal dataset sample: \n  AgeGroup mean_bmi mean_systolic_BP mean_diastolic_BP diabetes_prevalence\n1 Under 18 19.93960         104.3848          54.60773            0.714586\n2    18-34 27.78920         113.2374          67.26446            1.279788\n3    35-49 29.02937         117.8523          73.25816            5.888031\n4      50+ 29.07508         127.9862          69.55237           18.847501\n\n\nUpdated DT data table\n\n\nShow the code\ndatatable_table_complex <- datatable(complex_data_by_age,\n                                     caption = \"Health Metrics by Age Group\",\n                                     rownames = FALSE,\n                                     options = list(pageLength = 10))\n\nprint(datatable_table_complex)"
  },
  {
    "objectID": "posts/Tables/Tables.html",
    "href": "posts/Tables/Tables.html",
    "title": "Tables NHANES",
    "section": "",
    "text": "Load libraries and data\n\n\nShow the code\nlibrary(gt)\nlibrary(flextable)\nlibrary(DT)\nlibrary(tidyverse)\nlibrary(NHANES)\n\ndata(NHANES)\n\n\nCreate a summary of BMI by age group\n\n\nShow the code\nbmi_data_by_age <- NHANES %>%\n  mutate(AgeGroup = case_when(\n    Age < 18 ~ \"Under 18\",\n    Age >= 18 & Age < 35 ~ \"18-34\",\n    Age >= 35 & Age < 50 ~ \"35-49\",\n    Age >= 50 ~ \"50+\"\n  )) %>%\n  group_by(AgeGroup) %>%\n  summarize(mean_bmi = mean(BMI, na.rm = TRUE))\n\n\nGT table\n\n\nShow the code\ngt_table <- bmi_data_by_age %>%\n  gt() %>%\n  tab_header(title = \"Average BMI by Age Group\") %>%\n  cols_label(\n    AgeGroup = \"Age Group\",\n    mean_bmi = \"Mean BMI\"\n  )\n\ngt::gt_preview(gt_table)\n\n\n\n\n\n\n  \n  \n    \n      \n      AgeGroup\n      mean_bmi\n    \n  \n  \n    1\n18-34\n27.78920\n    2\n35-49\n29.02937\n    3\n50+\n29.07508\n    4\nUnder 18\n19.93960\n  \n  \n  \n\n\n\n\nFlextable\n\n\nShow the code\nflextable_table <- bmi_data_by_age %>%\n  flextable() %>%\n  set_caption(\"Average BMI by Age Group\") %>%\n  colformat_num(\n    j = \"mean_bmi\",\n    digits = 2,\n    big.mark = \",\"\n  )\n\nprint(flextable_table)\n\n\na flextable object.\ncol_keys: `AgeGroup`, `mean_bmi` \nheader has 1 row(s) \nbody has 4 row(s) \noriginal dataset sample: \n  AgeGroup mean_bmi\n1    18-34 27.78920\n2    35-49 29.02937\n3      50+ 29.07508\n4 Under 18 19.93960\n\n\nDT data table\n\n\nShow the code\ndatatable_table <- datatable(bmi_data_by_age,\n                             caption = \"Average BMI by Age Group\",\n                             rownames = FALSE,\n                             options = list(pageLength = 10))\n\ndatatable_table\n\n\n\n\n\n\n\nAdd more variables\n\n\nShow the code\ncomplex_data_by_age <- NHANES %>%\n  mutate(AgeGroup = factor(case_when(\n    Age < 18 ~ \"Under 18\",\n    Age >= 18 & Age < 35 ~ \"18-34\",\n    Age >= 35 & Age < 50 ~ \"35-49\",\n    Age >= 50 ~ \"50+\"\n  ), levels = c(\"Under 18\", \"18-34\", \"35-49\", \"50+\"))) %>%\n  group_by(AgeGroup) %>%\n  summarize(\n    mean_bmi = mean(BMI, na.rm = TRUE),\n    mean_systolic_BP = mean(BPSysAve, na.rm = TRUE),\n    mean_diastolic_BP = mean(BPDiaAve, na.rm = TRUE),\n    diabetes_prevalence = mean(Diabetes == \"Yes\", na.rm = TRUE) * 100\n  )\n\n\nUpdated GT table\n\n\nShow the code\ngt_table_complex <- complex_data_by_age %>%\n  gt() %>%\n  tab_header(title = \"Health Metrics by Age Group\") %>%\n  cols_label(\n    AgeGroup = \"Age Group\",\n    mean_bmi = \"Mean BMI\",\n    mean_systolic_BP = \"Mean Systolic BP\",\n    mean_diastolic_BP = \"Mean Diastolic BP\",\n    diabetes_prevalence = \"Diabetes Prevalence (%)\"\n  )\n\ngt::gt_preview(gt_table_complex)\n\n\n\n\n\n\n  \n  \n    \n      \n      AgeGroup\n      mean_bmi\n      mean_systolic_BP\n      mean_diastolic_BP\n      diabetes_prevalence\n    \n  \n  \n    1\nUnder 18\n19.93960\n104.3848\n54.60773\n0.714586\n    2\n18-34\n27.78920\n113.2374\n67.26446\n1.279788\n    3\n35-49\n29.02937\n117.8523\n73.25816\n5.888031\n    4\n50+\n29.07508\n127.9862\n69.55237\n18.847501\n  \n  \n  \n\n\n\n\nUpdated Flextable\n\n\nShow the code\nflextable_table_complex <- complex_data_by_age %>%\n  flextable() %>%\n  set_caption(\"Health Metrics by Age Group\") %>%\n  colformat_num(\n    j = c(\"mean_bmi\", \"mean_systolic_BP\", \"mean_diastolic_BP\", \"diabetes_prevalence\"),\n    digits = 2,\n    big.mark = \",\"\n  )\n\nprint(flextable_table_complex)\n\n\na flextable object.\ncol_keys: `AgeGroup`, `mean_bmi`, `mean_systolic_BP`, `mean_diastolic_BP`, `diabetes_prevalence` \nheader has 1 row(s) \nbody has 4 row(s) \noriginal dataset sample: \n  AgeGroup mean_bmi mean_systolic_BP mean_diastolic_BP diabetes_prevalence\n1 Under 18 19.93960         104.3848          54.60773            0.714586\n2    18-34 27.78920         113.2374          67.26446            1.279788\n3    35-49 29.02937         117.8523          73.25816            5.888031\n4      50+ 29.07508         127.9862          69.55237           18.847501\n\n\nShow the code\n#save_as_image(x = flextable_table_complex, path = \"/Users/isaacjohnson/Willamette/Portfolio/posts/Tables/Tables.png\")\n\n\nUpdated DT data table\n\n\nShow the code\ndatatable_table_complex <- datatable(complex_data_by_age,\n                                     caption = \"Health Metrics by Age Group\",\n                                     rownames = FALSE,\n                                     options = list(pageLength = 10))\n\ndatatable_table_complex"
  },
  {
    "objectID": "posts/ggiraph/interactive graphics.html",
    "href": "posts/ggiraph/interactive graphics.html",
    "title": "ggiraph",
    "section": "",
    "text": "Show the code\nlibrary(ggiraph)\nlibrary(htmlwidgets)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(gridExtra)\nlibrary(htmltools)\nlibrary(tidyr)\nlibrary(NHANES)\n\ndata(NHANES)\n\nNHANES_subset <- NHANES %>%\n  filter(!is.na(Diabetes), !is.na(PhysActive), !is.na(BMI), !is.na(Age)) %>%\n  mutate(Diabetes = ifelse(Diabetes == \"Yes\", \"Yes\", \"No\"),\n         PhysActive = ifelse(PhysActive == \"Yes\", \"Yes\", \"No\")) %>%\n  mutate(Diabetes = as.factor(Diabetes),\n         PhysActive = as.factor(PhysActive)) %>%\n    select(c(Diabetes, BMI, Age, PhysActive))\n\n\nggiraph\n\n\nShow the code\nscatter_plot <- ggplot(NHANES_subset) +\n  geom_point_interactive(\n    aes(x = BMI, y = Age, color = Diabetes, shape = PhysActive, tooltip = paste(\"Diabetes:\", Diabetes, \"<br>Physically Active:\", PhysActive, \"<br>BMI:\", round(BMI, 1), \"<br>Age:\", Age)),\n    size = 2,\n    alpha = 0.6\n  ) +\n  scale_color_manual(values = c(\"#FF5964\", \"#35A7FF\")) +\n  labs(\n    title = \"Scatter Plot of Age vs BMI by Diabetes Status and Physical Activity\",\n    x = \"BMI\",\n    y = \"Age\",\n    color = \"Diabetes Status\",\n    shape = \"Physically Active\"\n  ) +\n  theme_minimal()\n\n# Save the plot as a png file\n#ggsave(filename = \"interactive.png\", plot = scatter_plot, width = 10, height = 6, dpi = 300)\n\nscatter_plot_interactive <- girafe(code = print(scatter_plot), width_svg = 8, height_svg = 5)\nscatter_plot_interactive\n\n\n\n\n\n\nSave scatterplot html\n\n\nShow the code\n#htmlwidgets::saveWidget(scatter_plot_interactive, \"interactive_scatter_plot.html\")\n\n\nDiabetes Prevalence and Mean BMI\n\n\nShow the code\n#added more variables\ncomplex_data_by_age <- NHANES %>%\n  mutate(AgeGroup = factor(case_when(\n    Age < 18 ~ \"Under 18\",\n    Age >= 18 & Age < 35 ~ \"18-34\",\n    Age >= 35 & Age < 50 ~ \"35-49\",\n    Age >= 50 ~ \"50+\"\n  ), levels = c(\"Under 18\", \"18-34\", \"35-49\", \"50+\"))) %>%\n  group_by(AgeGroup) %>%\n  summarize(\n    mean_bmi = mean(BMI, na.rm = TRUE),\n    mean_systolic_BP = mean(BPSysAve, na.rm = TRUE),\n    mean_diastolic_BP = mean(BPDiaAve, na.rm = TRUE),\n    diabetes_prevalence = mean(Diabetes == \"Yes\", na.rm = TRUE) * 100\n  )\n\n# Prepare the summary data for ggiraph\ncomplex_data_long <- complex_data_by_age %>%\n  gather(variable, value, -AgeGroup) %>%\n  mutate(label = round(value, 2))\n\n# Create the first ggplot object for Diabetes prevalence and Mean BMI\ngg1 <- ggplot(data = complex_data_long %>% filter(variable %in% c(\"diabetes_prevalence\", \"mean_bmi\")), \n              aes(x = AgeGroup, y = value, fill = variable, tooltip = label)) +\n  geom_bar_interactive(stat = \"identity\", position = \"dodge\") +\n  theme_minimal() +\n  scale_fill_brewer(palette = \"Set1\", name = \"Health Metric\") +\n  labs(title = \"Diabetes Prevalence and Mean BMI by Age Group\", x = \"Age Group\", y = \"Value\") +\n  theme(legend.position = \"bottom\")\n\n# Create the second ggplot object for Mean Diastolic BP and Mean Systolic BP\ngg2 <- ggplot(data = complex_data_long %>% filter(variable %in% c(\"mean_diastolic_BP\", \"mean_systolic_BP\")), \n              aes(x = AgeGroup, y = value, fill = variable, tooltip = label)) +\n  geom_bar_interactive(stat = \"identity\", position = \"dodge\") +\n  theme_minimal() +\n  scale_fill_brewer(palette = \"Set1\", name = \"Health Metric\") +\n  labs(title = \"Mean Diastolic and Systolic BP by Age Group\", x = \"Age Group\", y = \"Value\") +\n  theme(legend.position = \"bottom\")\n\n\nggiraph Vertically\n\n\nShow the code\n# Create the ggiraph objects with larger dimensions\ngiraph1 <- ggiraph(code = print(gg1), width_svg = 8, height_svg = 5)\ngiraph2 <- ggiraph(code = print(gg2), width_svg = 8, height_svg = 5)\n\n# Arrange the ggiraph objects vertically in a single column\nhtml_output <- tagList(\n  tags$head(tags$style(HTML(\"\n    .girafe-container {\n      width: 800px !important;\n      height: 500px !important;\n    }\n    .girafe-container > svg {\n      width: 100% !important;\n      height: 100% !important;\n    }\n  \"))),\n  tags$div(style = \"display:block;\", giraph1),\n  tags$div(style = \"display:block;\", giraph2)\n)\n\n# Save the output as an HTML file\nsave_html(html_output, \"vertical_ggiraph.html\")\n\n# Display the vertical ggiraph plots in the RStudio viewer or a web browser\nhtml_output"
  }
]